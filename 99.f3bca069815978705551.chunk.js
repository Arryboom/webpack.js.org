(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{393:function(n,s,a){"use strict";a.r(s),s.default='<p><a href="https://npmjs.com/package/exports-loader"><img src="https://img.shields.io/npm/v/exports-loader.svg" alt="npm"></a>\n<a href="https://nodejs.org/"><img src="https://img.shields.io/node/v/exports-loader.svg" alt="node"></a>\n<a href="https://david-dm.org/webpack-contrib/exports-loader"><img src="https://david-dm.org/webpack-contrib/exports-loader.svg" alt="deps"></a>\n<a href="https://github.com/webpack-contrib/exports-loader/actions"><img src="https://github.com/webpack-contrib/exports-loader/workflows/exports-loader/badge.svg" alt="tests"></a>\n<a href="https://codecov.io/gh/webpack-contrib/exports-loader"><img src="https://codecov.io/gh/webpack-contrib/exports-loader/branch/master/graph/badge.svg" alt="coverage"></a>\n<a href="https://gitter.im/webpack/webpack"><img src="https://badges.gitter.im/webpack/webpack.svg" alt="chat"></a>\n<a href="https://packagephobia.now.sh/result?p=exports-loader"><img src="https://packagephobia.now.sh/badge?p=exports-loader" alt="size"></a></p>\n<p>Allow to setup exports <code>module.exports</code>/<code>export</code> for source files.</p>\n<p>Useful when a source file does not contain exports or something does not export.</p>\n<p>For further hints on compatibility issues, check out <a href="/guides/shimming/">Shimming</a> of the official docs.</p>\n<blockquote>\n<p>⚠ By default loader generate ES module named syntax.</p>\n<p>⚠ Be careful, existing exports (<code>export</code>/<code>module.exports</code>/<code>exports</code>) in the original code and exporting new values can cause a failure.</p>\n</blockquote>\n<h2>Getting Started</h2>\n<p>To begin, you\'ll need to install <code>exports-loader</code>:</p>\n<pre><code class="hljs language-console">$ npm install exports-loader --save-dev\n</code></pre>\n<h3>Inline</h3>\n<p>The <code>|</code> or <code>%20</code> (space) allow to separate the <code>syntax</code>, <code>name</code> and <code>alias</code> of export.\nThe documentation and syntax examples can be read <a href="#syntax">here</a>.</p>\n<blockquote>\n<p>⚠ <code>%20</code> is space in a query string, because you can\'t use spaces in URLs</p>\n</blockquote>\n<p>Then add the loader to the desired <code>import</code> statement or <code>require</code> calls. For example:</p>\n<pre><code class="hljs language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> myFunction <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'exports-loader?exports=myFunction!./file.js\'</span><span class="token punctuation">;</span>\n<span class="token comment">// Adds the following code to the file\'s source:</span>\n<span class="token comment">//</span>\n<span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span>\n<span class="token comment">//</span>\n<span class="token comment">// export { myFunction }</span>\n\n<span class="token function">myFunction</span><span class="token punctuation">(</span><span class="token string">\'Hello world\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<pre><code class="hljs language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span>\n  myVariable<span class="token punctuation">,</span>\n  myFunction<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'exports-loader?exports[]=myVariable&#x26;exports[]=myFunction!./file.js\'</span><span class="token punctuation">;</span>\n<span class="token comment">// Adds the following code to the file\'s source:</span>\n<span class="token comment">//</span>\n<span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span>\n<span class="token comment">//</span>\n<span class="token comment">// export { myVariable, myFunction };</span>\n\n<span class="token keyword">const</span> newVariable <span class="token operator">=</span> myVariable <span class="token operator">+</span> <span class="token string">\'!!!\'</span><span class="token punctuation">;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newVariable<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token function">myFunction</span><span class="token punctuation">(</span><span class="token string">\'Hello world\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<pre><code class="hljs language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> file <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'exports-loader?[name]!./file.js\'</span><span class="token punctuation">;</span>\n<span class="token comment">// Adds the following code to the file\'s source:</span>\n<span class="token comment">//</span>\n<span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span>\n<span class="token comment">//</span>\n<span class="token comment">// export { file };</span>\n\n<span class="token function">file</span><span class="token punctuation">(</span><span class="token string">\'string\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> <span class="token punctuation">{</span>\n  myFunction<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'exports-loader?type=commonjs&#x26;exports=myFunction!./file.js\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// Adds the following code to the file\'s source:</span>\n<span class="token comment">//</span>\n<span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span>\n<span class="token comment">//</span>\n<span class="token comment">// module.exports = { myFunction }</span>\n\n<span class="token function">myFunction</span><span class="token punctuation">(</span><span class="token string">\'Hello world\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<pre><code class="hljs language-js"><span class="token comment">// Alternative syntax:</span>\n<span class="token comment">// import myFunction from \'exports-loader?exports=default%20myFunction!./file.js\';</span>\n<span class="token keyword">import</span> myFunction <span class="token keyword">from</span> <span class="token string">\'exports-loader?exports=default|myFunction!./file.js\'</span><span class="token punctuation">;</span>\n<span class="token comment">// `%20` is space in a query string, equivalently `default myFunction`</span>\n<span class="token comment">// Adds the following code to the file\'s source:</span>\n<span class="token comment">//</span>\n<span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span>\n<span class="token comment">//</span>\n<span class="token comment">// exports default myFunction;</span>\n\n<span class="token function">myFunction</span><span class="token punctuation">(</span><span class="token string">\'Hello world\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> myFunction <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'exports-loader?type=commonjs&#x26;exports=single|myFunction!./file.js\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// `|` is separator in a query string, equivalently `single|myFunction`</span>\n<span class="token comment">// Adds the following code to the file\'s source:</span>\n<span class="token comment">//</span>\n<span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span>\n<span class="token comment">//</span>\n<span class="token comment">// module.exports = myFunction;</span>\n\n<span class="token function">myFunction</span><span class="token punctuation">(</span><span class="token string">\'Hello world\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<pre><code class="hljs language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> myFunctionAlias <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'exports-loader?exports=named|myFunction|myFunctionAlias!./file.js\'</span><span class="token punctuation">;</span>\n<span class="token comment">// `|` is separator in a query string, equivalently `named|myFunction|myFunctionAlias`</span>\n<span class="token comment">// Adds the following code to the file\'s source:</span>\n<span class="token comment">//</span>\n<span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span>\n<span class="token comment">//</span>\n<span class="token comment">// exports { myFunction as myFunctionAlias };</span>\n\n<span class="token function">myFunctionAlias</span><span class="token punctuation">(</span><span class="token string">\'Hello world\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p>Description of string values can be found in the documentation below.</p>\n<h3>Using Configuration</h3>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token comment">// You can use `regexp`</span>\n        <span class="token comment">// test: /vendor\\.js/$</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'./path/to/vendor.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'exports-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          exports<span class="token punctuation">:</span> <span class="token string">\'myFunction\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>And run <code>webpack</code> via your preferred method.</p>\n<h2>Options</h2>\n<table>\n<thead>\n<tr>\n<th align="center">Name</th>\n<th align="center">Type</th>\n<th align="center">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#type"><code>type</code></a></strong><p class="description mobile"><code>{String}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String}</code></td>\n<td align="center"><code>module</code></td>\n<td align="left">Format of generated exports</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#exports"><code>exports</code></a></strong><p class="description mobile"><code>{String\\|Object\\|Array&#x3C;String\\|Object>}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String\\|Object\\|Array&#x3C;String\\|Object>}</code></td>\n<td align="center"><code>undefined</code></td>\n<td align="left">List of exports</td>\n</tr>\n</tbody>\n</table>\n<h3><code>type</code></h3>\n<p>Type: <code>String</code>\nDefault: <code>module</code></p>\n<p>Format of generated exports.</p>\n<p>Possible values - <code>commonjs</code> (CommonJS module syntax) and <code>module</code> (ES module syntax).</p>\n<h4><code>commonjs</code></h4>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'./path/to/vendor.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'exports-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          type<span class="token punctuation">:</span> <span class="token string">\'commonjs\'</span><span class="token punctuation">,</span>\n          exports<span class="token punctuation">:</span> <span class="token string">\'Foo\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Generate output:</p>\n<pre><code class="hljs language-js"><span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span> Foo <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h4><code>module</code></h4>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'./path/to/vendor.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'exports-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          type<span class="token punctuation">:</span> <span class="token string">\'module\'</span><span class="token punctuation">,</span>\n          exports<span class="token punctuation">:</span> <span class="token string">\'Foo\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Generate output:</p>\n<pre><code class="hljs language-js"><span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span>\n\n<span class="token keyword">export</span> <span class="token punctuation">{</span> Foo <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3><code>exports</code></h3>\n<p>Type: <code>String|Array</code>\nDefault: <code>undefined</code></p>\n<p>List of exports.</p>\n<h4><code>String</code></h4>\n<p>Allows to use a string to describe an export.</p>\n<h5><code>Syntax</code></h5>\n<p>The <code>|</code> or <code>%20</code> (space) allow to separate the <code>syntax</code>, <code>name</code> and <code>alias</code> of export.</p>\n<p>String syntax - <code>[[syntax] [name] [alias]]</code> or <code>[[syntax]|[name]|[alias]]</code>, where:</p>\n<ul>\n<li>\n<p><code>[syntax]</code> (<strong>may be omitted</strong>) -</p>\n<ul>\n<li>if <code>type</code> is <code>module</code>- can be <code>default</code> and <code>named</code>,</li>\n<li>if <code>type</code> is <code>commonjs</code>- can be <code>single</code> and <code>multiple</code></li>\n</ul>\n</li>\n<li>\n<p><code>[name]</code> - name of an exported value (<strong>required</strong>)</p>\n</li>\n<li>\n<p><code>[alias]</code> - alias of an exported value (<strong>may be omitted</strong>)</p>\n</li>\n</ul>\n<p>Examples:</p>\n<ul>\n<li><code>[Foo]</code> - generates <code>export { Foo };</code>.</li>\n<li><code>[default Foo]</code> - generates <code>export default Foo;</code>.</li>\n<li><code>[named Foo]</code> - generates <code>export { Foo };</code>.</li>\n<li><code>[named Foo FooA]</code> - generates <code>export { Foo as FooA };</code>.</li>\n<li><code>[single Foo]</code> - generates <code>module.exports = Foo;</code>.</li>\n<li><code>[multiple Foo]</code> - generates <code>module.exports = { Foo };</code>.</li>\n<li><code>[multiple Foo FooA]</code> - generates <code>module.exports = { \'FooA\': Foo };</code>.</li>\n<li><code>[[name]]</code> - generates ES module named exports and exports a variable equal to the filename, for <code>single.js</code> it will be <code>single</code>, generates <code>export { single };</code>.</li>\n<li><code>[named [name] [name]Alias]</code> - generates ES module named exports and exports a value equal to the filename under other name., for <code>single.js</code> it will be <code>single</code> and <code>singleAlias</code>, generates <code>export { single as singleAlias };</code>.</li>\n</ul>\n<blockquote>\n<p>⚠ You need to set <code>type: "commonjs"</code> to use <code>single</code> or <code>multiple</code> syntaxes.</p>\n<p>⚠ Aliases can\'t be used together with <code>default</code> or <code>single</code> syntaxes.</p>\n</blockquote>\n<h5>Examples</h5>\n<h6>ES Module Default Export</h6>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'./path/to/vendor.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'exports-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          exports<span class="token punctuation">:</span> <span class="token string">\'default Foo\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Generate output:</p>\n<pre><code class="hljs language-js"><span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Foo<span class="token punctuation">;</span></code></pre>\n<h6>ES Module Named Exports</h6>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'./path/to/vendor.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'exports-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          exports<span class="token punctuation">:</span> <span class="token string">\'named Foo FooA\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Generate output:</p>\n<pre><code class="hljs language-js"><span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span>\n\n<span class="token keyword">export</span> <span class="token punctuation">{</span> Foo <span class="token keyword">as</span> FooA <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h6>CommonJS Single Export</h6>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'./path/to/vendor.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'exports-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          type<span class="token punctuation">:</span> <span class="token string">\'commonjs\'</span><span class="token punctuation">,</span>\n          exports<span class="token punctuation">:</span> <span class="token string">\'single Foo\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Generate output:</p>\n<pre><code class="hljs language-js"><span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> Foo<span class="token punctuation">;</span></code></pre>\n<h6>CommonJS Multiple Exports</h6>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'./path/to/vendor.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'exports-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          type<span class="token punctuation">:</span> <span class="token string">\'commonjs\'</span><span class="token punctuation">,</span>\n          exports<span class="token punctuation">:</span> <span class="token string">\'multiple Foo FooA\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Generate output:</p>\n<pre><code class="hljs language-js"><span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span> FooA<span class="token punctuation">:</span> Foo <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h4><code>Object</code></h4>\n<p>Allows to use an object to describe an export.</p>\n<p>Properties:</p>\n<ul>\n<li><code>syntax</code> - can be <code>default</code> or <code>named</code> for the <code>module</code> type (<code>ES modules</code> module format), and <code>single</code> or <code>multiple</code> for the <code>commonjs</code> type (<code>CommonJS</code> module format) (<strong>may be omitted</strong>)</li>\n<li><code>name</code> - name of an exported value (<strong>required</strong>)</li>\n<li><code>alias</code> - alias of an exported value (<strong>may be omitted</strong>)</li>\n</ul>\n<h5>Examples</h5>\n<h6>ES Module Default Export</h6>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'./path/to/vendor.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'exports-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          exports<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            syntax<span class="token punctuation">:</span> <span class="token string">\'default\'</span><span class="token punctuation">,</span>\n            name<span class="token punctuation">:</span> <span class="token string">\'Foo\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Generate output:</p>\n<pre><code class="hljs language-js"><span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Foo<span class="token punctuation">;</span></code></pre>\n<h6>ES Module Named Exports</h6>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'./path/to/vendor.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'exports-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          exports<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            syntax<span class="token punctuation">:</span> <span class="token string">\'named\'</span><span class="token punctuation">,</span>\n            name<span class="token punctuation">:</span> <span class="token string">\'Foo\'</span><span class="token punctuation">,</span>\n            alias<span class="token punctuation">:</span> <span class="token string">\'FooA\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Generate output:</p>\n<pre><code class="hljs language-js"><span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span>\n\n<span class="token keyword">export</span> <span class="token punctuation">{</span> Foo <span class="token keyword">as</span> FooA <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h6>CommonJS Single Export</h6>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'./path/to/vendor.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'exports-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          type<span class="token punctuation">:</span> <span class="token string">\'commonjs\'</span><span class="token punctuation">,</span>\n          exports<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            syntax<span class="token punctuation">:</span> <span class="token string">\'single\'</span><span class="token punctuation">,</span>\n            name<span class="token punctuation">:</span> <span class="token string">\'Foo\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Generate output:</p>\n<pre><code class="hljs language-js"><span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> Foo<span class="token punctuation">;</span></code></pre>\n<h6>CommonJS Multiple Exports</h6>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'./path/to/vendor.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'exports-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          type<span class="token punctuation">:</span> <span class="token string">\'commonjs\'</span><span class="token punctuation">,</span>\n          exports<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            syntax<span class="token punctuation">:</span> <span class="token string">\'multiple\'</span><span class="token punctuation">,</span>\n            name<span class="token punctuation">:</span> <span class="token string">\'Foo\'</span><span class="token punctuation">,</span>\n            alias<span class="token punctuation">:</span> <span class="token string">\'FooA\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Generate output:</p>\n<pre><code class="hljs language-js"><span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span> FooA<span class="token punctuation">:</span> Foo <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h4><code>Array</code></h4>\n<p>Allow to specify multiple exports. Each item can be a <a href="https://github.com/webpack-contrib/exports-loader#string"><code>string</code></a> or an <a href="https://github.com/webpack-contrib/exports-loader#object"><code>object</code></a>.</p>\n<blockquote>\n<p>⚠ Not possible to use <code>single</code> and <code>multiple</code> syntaxes together due to CommonJS format limitations.</p>\n<p>⚠ Not possible to use multiple <code>default</code> values due to ES module format limitations.</p>\n<p>⚠ Not possible to use multiple <code>single</code> values due to CommonJS format limitations.</p>\n</blockquote>\n<h5>Examples</h5>\n<h6>CommonJS Multiple Exports</h6>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'./path/to/vendor.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'exports-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          type<span class="token punctuation">:</span> <span class="token string">\'commonjs\'</span><span class="token punctuation">,</span>\n          exports<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'Foo\'</span><span class="token punctuation">,</span> <span class="token string">\'multiple Bar\'</span><span class="token punctuation">,</span> <span class="token string">\'multiple Baz BazA\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Generate output:</p>\n<pre><code class="hljs language-js"><span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span> Foo<span class="token punctuation">,</span> Bar<span class="token punctuation">,</span> BazA<span class="token punctuation">:</span> Bar <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h6>ES Module Default Export And Named Exports Together</h6>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'./path/to/vendor.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'exports-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          exports<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'default Foo\'</span><span class="token punctuation">,</span> <span class="token string">\'named Bar BarA\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Generate output:</p>\n<pre><code class="hljs language-js"><span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Foo<span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token punctuation">{</span> Bar <span class="token keyword">as</span> BarA <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h6>Named Exports</h6>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'./path/to/vendor.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'exports-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          exports<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span> syntax<span class="token punctuation">:</span> <span class="token string">\'named\'</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span> <span class="token string">\'Foo\'</span><span class="token punctuation">,</span> alias<span class="token punctuation">:</span> <span class="token string">\'FooA\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span> syntax<span class="token punctuation">:</span> <span class="token string">\'named\'</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span> <span class="token string">\'Bar\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token string">\'Baz\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Generate output:</p>\n<pre><code class="hljs language-js"><span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span>\n\n<span class="token keyword">export</span> <span class="token punctuation">{</span> Foo <span class="token keyword">as</span> FooA<span class="token punctuation">,</span> Bar<span class="token punctuation">,</span> Baz <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h2>Contributing</h2>\n<p>Please take a moment to read our contributing guidelines if you haven\'t yet done so.</p>\n<p><a href="https://github.com/webpack-contrib/exports-loader/blob/master/.github/CONTRIBUTING.md">CONTRIBUTING</a></p>\n<h2>License</h2>\n<p><a href="https://github.com/webpack-contrib/exports-loader/blob/master/LICENSE">MIT</a></p>\n'}}]);